{"version":3,"sources":["utils.ts","components/Pagination/Pagination.tsx","App.tsx","index.tsx"],"names":["getNumbers","from","to","numbers","n","push","Pagination","total","perPage","currentPage","onPageChange","lastPage","Math","ceil","pages","isFirstPage","isLastPage","className","href","onClick","map","page","items","itemCount","length","App","useState","setCurrentPage","postsPerPage","setPostsPerPage","indexOfLastPost","indexOfFirstPost","currentPosts","slice","id","value","onChange","event","Number","target","htmlFor","post","ReactDOM","render","document","getElementById"],"mappings":"mKAAO,SAASA,EAAWC,EAAcC,GAGvC,IAFA,IAAMC,EAAU,GAEPC,EAAIH,EAAMG,GAAKF,EAAIE,GAAK,EAC/BD,EAAQE,KAAKD,GAGf,OAAOD,E,WCEIG,EAA8B,SAAC,GAKrC,IAJLC,EAII,EAJJA,MACAC,EAGI,EAHJA,QACAC,EAEI,EAFJA,YACAC,EACI,EADJA,aAEMC,EAAWC,KAAKC,KAAKN,EAAQC,GAC7BM,EAAQd,EAAW,EAAGW,GACtBI,EAA8B,IAAhBN,EACdO,EAAaP,IAAgBE,EAEnC,OACE,qBAAIM,UAAU,aAAd,UACE,oBAAIA,UAAS,oBAAeF,GAAe,YAA3C,SACE,mBACE,UAAQ,WACRE,UAAU,YACVC,KAAK,QACL,gBAAeH,EACfI,QAAS,WACFJ,GACHL,EAAaD,EAAc,IAPjC,oBAeDK,EAAMM,KAAI,SAAAC,GAAI,OACb,oBAEEJ,UAAS,oBAAeI,IAASZ,GAAe,UAFlD,SAIE,mBACE,UAAQ,WACRQ,UAAU,YACVC,KAAI,WAAMG,GACVF,QAAS,kBAAMT,EAAaW,IAJ9B,SAMGA,KATEA,MAcT,oBAAIJ,UAAS,oBAAeD,GAAc,YAA1C,SACE,mBACE,UAAQ,WACRC,UAAU,YACVC,KAAK,QACL,gBAAeH,EACfI,QAAS,WACFH,GACHN,EAAaD,EAAc,IAPjC,wBCjDFa,EAAQtB,EAAW,EAAG,IACzBoB,KAAI,SAAAhB,GAAC,qBAAYA,MAEdmB,EAAYD,EAAME,OAIXC,EAAgB,WAC3B,MAAsCC,mBAAS,GAA/C,mBAAOjB,EAAP,KAAoBkB,EAApB,KACA,EAAwCD,mBAJhB,GAIxB,mBAAOE,EAAP,KAAqBC,EAArB,KAEMC,EAAkBrB,EAAcmB,EAChCG,EAAmBD,EAAkBF,EACrCI,EAAeV,EAAMW,MAAMF,EAAkBD,GAOnD,OACE,sBAAKb,UAAU,YAAf,UACE,uDAEA,mBAAGA,UAAU,OAAO,UAAQ,OAA5B,wBACWR,EADX,mBACiCqB,EAAkB,EADnD,cAC0DC,EAD1D,eACiFR,EADjF,OAIA,sBAAKN,UAAU,iBAAf,UACE,qBAAKA,UAAU,0BAAf,SACE,yBACE,UAAQ,kBACRiB,GAAG,kBACHjB,UAAU,eACVkB,MAAOP,EACPQ,SApBW,SAACC,GACpBV,EAAe,GACfE,EAAgBS,OAAOD,EAAME,OAAOJ,SAa9B,UAOE,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,IAAd,eACA,wBAAQA,MAAM,KAAd,gBACA,wBAAQA,MAAM,KAAd,qBAIJ,uBAAOK,QAAQ,kBAAkBvB,UAAU,qBAA3C,+BAIF,cAAC,EAAD,CACEV,MAAOgB,EACPf,QAASoB,EACTnB,YAAaA,EACbC,aAAciB,IAEhB,6BACGK,EAAaZ,KAAI,SAAAqB,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YC3DnBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,U","file":"static/js/main.6c254bee.chunk.js","sourcesContent":["export function getNumbers(from: number, to: number): number[] {\n  const numbers = [];\n\n  for (let n = from; n <= to; n += 1) {\n    numbers.push(n);\n  }\n\n  return numbers;\n}\n","import { getNumbers } from '../../utils';\n\ninterface Props {\n  total: number,\n  perPage: number,\n  currentPage: number,\n  onPageChange: (page: number) => void,\n}\n\nexport const Pagination: React.FC<Props> = ({\n  total,\n  perPage,\n  currentPage,\n  onPageChange,\n}) => {\n  const lastPage = Math.ceil(total / perPage);\n  const pages = getNumbers(1, lastPage);\n  const isFirstPage = currentPage === 1;\n  const isLastPage = currentPage === lastPage;\n\n  return (\n    <ul className=\"pagination\">\n      <li className={`page-item ${isFirstPage && 'disabled'}`}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#prev\"\n          aria-disabled={isFirstPage}\n          onClick={() => {\n            if (!isFirstPage) {\n              onPageChange(currentPage - 1);\n            }\n          }}\n        >\n          «\n        </a>\n      </li>\n\n      {pages.map(page => (\n        <li\n          key={page}\n          className={`page-item ${page === currentPage && 'active'}`}\n        >\n          <a\n            data-cy=\"pageLink\"\n            className=\"page-link\"\n            href={`#${page}`}\n            onClick={() => onPageChange(page)}\n          >\n            {page}\n          </a>\n        </li>\n      ))}\n\n      <li className={`page-item ${isLastPage && 'disabled'}`}>\n        <a\n          data-cy=\"prevLink\"\n          className=\"page-link\"\n          href=\"#next\"\n          aria-disabled={isFirstPage}\n          onClick={() => {\n            if (!isLastPage) {\n              onPageChange(currentPage + 1);\n            }\n          }}\n        >\n          »\n        </a>\n      </li>\n\n    </ul>\n  );\n};\n","import React, { ChangeEvent, useState } from 'react';\nimport './App.css';\nimport { getNumbers } from './utils';\nimport { Pagination } from './components/Pagination';\n\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nconst items = getNumbers(1, 42)\n  .map(n => `Item ${n}`);\n\nconst itemCount = items.length;\n\nconst startingPostCount = 5;\n\nexport const App: React.FC = () => {\n  const [currentPage, setCurrentPage] = useState(1);\n  const [postsPerPage, setPostsPerPage] = useState(startingPostCount);\n\n  const indexOfLastPost = currentPage * postsPerPage;\n  const indexOfFirstPost = indexOfLastPost - postsPerPage;\n  const currentPosts = items.slice(indexOfFirstPost, indexOfLastPost);\n\n  const handleChange = (event: ChangeEvent<HTMLSelectElement>) => {\n    setCurrentPage(1);\n    setPostsPerPage(Number(event.target.value));\n  };\n\n  return (\n    <div className=\"container\">\n      <h1>Items with Pagination</h1>\n\n      <p className=\"lead\" data-cy=\"info\">\n        {`Page ${currentPage} (items ${indexOfLastPost + 1} - ${indexOfFirstPost} of ${itemCount})`}\n      </p>\n\n      <div className=\"form-group row\">\n        <div className=\"col-3 col-sm-2 col-xl-1\">\n          <select\n            data-cy=\"perPageSelector\"\n            id=\"perPageSelector\"\n            className=\"form-control\"\n            value={postsPerPage}\n            onChange={handleChange}\n          >\n            <option value=\"3\">3</option>\n            <option value=\"5\">5</option>\n            <option value=\"10\">10</option>\n            <option value=\"20\">20</option>\n          </select>\n        </div>\n\n        <label htmlFor=\"perPageSelector\" className=\"col-form-label col\">\n          items per page\n        </label>\n      </div>\n      <Pagination\n        total={itemCount} // total number of items to paginate\n        perPage={postsPerPage} // number of items per page\n        currentPage={currentPage} /* optional with 1 by default */\n        onPageChange={setCurrentPage}\n      />\n      <ul>\n        {currentPosts.map(post => (\n          <li key={post} data-cy=\"item\">{post}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}